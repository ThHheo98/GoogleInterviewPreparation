namespace CommonAlgo.SortingAlgo
{
    /// <summary>
    ///     Плюсы:
    ///     эффективен на небольших наборах данных, на наборах данных до десятков 
    ///     элементов может оказаться лучшим;
    ///     эффективен на наборах данных, которые уже частично отсортированы;
    ///     это устойчивый алгоритм сортировки 
    ///     (не меняет порядок элементов, которые уже отсортированы);
    ///     может сортировать список по мере его получения;
    ///     использует O(1) временной памяти, включая стек.
    ///     может работать значительно быстрее за счёт бинарного поиска
    ///     Минусы:
    ///     Очень высокая вычислительная сложность алгоритма O(n^2) 
    ///     (при использовании стандартного алгоритма).
    /// </summary>
    public static class InsertionSort
    {
        public static void Sort(int[] a)
        {
            for (var i = 1; i < a.Length; i++)
                for (var j = i; j > 0 && a[j - 1] > a[j]; j--)
                    Utils.Swap(ref a[j - 1], ref a[j]);
        }
    }
}